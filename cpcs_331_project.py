# -*- coding: utf-8 -*-
"""CPCS-331_project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QAi8CnX85STXpUsPtDU0kLBgSa_Axrpa
"""


#My Study Guide

#Course name: CPCS-331 Artificial Intelligence (I)


! pip install experta
from experta import *
from array import *
import time



class question(Fact):
  pass

#knowledge base  
class myStudyGuide(KnowledgeEngine):
   #1
   @Rule(AND(question(level=(1)), question(answer=('T')), question(answerTime = ('fast')))) #time less than 15 seconds
   def fast_1(self):
      print("You are brilliant, move to the next question.")
     
   #2
   @Rule(AND(question(level=(1) ), question(answer=('T')),question(answerTime= ('slow')))) #time more than 15 seconds
   def slow_1(self):
      print("Nice, you understood this question, you will beat it if you practice more. \nyou can move to the next question.")
      

   #3
   @Rule(AND(question(level=(1) ), question(answer=('F')))) #wrong answer
   def wrong_1(self):
      print("Are you sure you studied this? try to study the following YouTube videos:\nAdding & Subtracting!  Scratch Garden \nmultiplication ignited minds-junior\nsee you later. ")
      

   #4
   @Rule(AND(question(level=(2) ), question(answer=('T')),question(answerTime= ('fast')))) #time less than 30 seconds
   def fast_2(self):
      print("Great!!, move to the next question. ")
      

  #5
   @Rule(AND(question(level=(2) ), question(answer=('T')),question(answerTime= ('slow')))) #time more than 30 seconds
   def slow_2(self):
      print("Nice, you are close to your goal, but you need to practice more. NEXT!! ")
      

   #6
   @Rule(AND(question(level=(2) ), question(answer=('F')))) #wrong answer
   def wrong_2(self):
      print("Uh-oh, you need to study the following resource/s on YouTube:\nAdding and subtracting decimals MightyOwl \nMultiplying decimals like a real math wizard | MightyOwl\nsee you later. ")
      

   #7
   @Rule(AND(question(level=(3) ), question(answer=('T')),question(answerTime= ('fast')))) #time less than 60 seconds
   def fast_3(self):
      print("Amazing, you fully understood this math concept. ")
      

   #8
   @Rule(AND(question(level=(3) ), question(answer=('T')),question(answerTime= ('slow')))) #time more than 60 seconds
   def slow_3(self):
        print("You are cool, try practicing on this type of questions to become a math hero. ")
      

   #9
   @Rule(AND(question(level=(3) ), question(answer=('F'))))#wrong answer
   def wrong_3(self):
        print("You need to study more. Check these videos on YouTube:\nMath 9: What is a Power?\nDivision for Kids tutway\nIntroduction to square roots khan academy\nsee you later.")



engine = myStudyGuide()
engine.reset()

# array of questions and answers
QandA=[["Q1: 5 + 6 =",11],["Q2: 9 - 5 =",4],["Q3: 6 x 7 =",42],["Q4: 13.5 + 3.2 =",16.7],["Q5: 64.8 - 37.1 =",27.7],["Q6: 33.2 x 2 =",66.4],["Q7:12 / 4 =",3],["Q8:4^2 =",16],["Q9: âˆš9 =",3]]

#print header
print("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n")
print("Hi!!, I am your study guide. \nNow, Let me test your math skills: \n")
print("~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n")
L=1 #level
counter= 0
while (counter<=8):
   engine.reset()
   #print level header
   if counter==0 : print("\n** LEVEL 1 **\n")
   elif counter==3 : print("\n** LEVEL 2 **\n") ;L=2
   elif counter==6 : print("\n** LEVEL 3 **\n") ;L=3
  
   start = time.time() #calculate time
   A=eval(input(QandA[counter][0])) #answer from user
   end = time.time()
   timeInSec= end-start

   #switch to determaine time 
   #fast or slow
  
   if(L==1):
     if (timeInSec<=15): ForS='fast'
     else : ForS='slow'
   elif(L==2):
     if (timeInSec<=30): ForS='fast'
     else : ForS='slow'   
   elif(L==3):
     if (timeInSec<=60): ForS='fast'
     else : ForS='slow'   

  
   #is the answer right or wrong?
   if (A==QandA[counter][1]) :
    counter+=1
    engine.declare(question(level=L) , question(answer='T') , question(answerTime=ForS))
    engine.run()
   else:
    
     engine.declare(question(level=L) , question(answer='F'))
     engine.run()
    #wrong answer then break
     break